(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 (_ BitVec 256))
(declare-const bv_4 (_ BitVec 256))
(declare-const bv_5 (_ BitVec 256))
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 (_ BitVec 256))
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 (_ BitVec 256))
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 (_ BitVec 256))
(declare-const bv_17 (_ BitVec 256))
(declare-const bv_18 (_ BitVec 256))
(declare-const bv_19 (_ BitVec 256))
(declare-const bv_20 (_ BitVec 256))
(declare-const bv_21 (_ BitVec 256))
(declare-const bv_22 (_ BitVec 256))
(declare-const bv_23 (_ BitVec 256))
(declare-const bv_24 (_ BitVec 256))
(declare-const bv_25 (_ BitVec 256))
(declare-const bv_26 (_ BitVec 256))
(declare-const bv_27 (_ BitVec 256))
(declare-const bv_28 (_ BitVec 256))
(declare-const bv_29 (_ BitVec 256))
(declare-const bv_30 (_ BitVec 256))
(declare-const bv_31 Bool)
(declare-const bv_32 Bool)
(declare-const bv_33 (_ BitVec 256))
(declare-const bv_34 (_ BitVec 256))
(declare-const bv_35 (_ BitVec 256))
(declare-const bv_36 (_ BitVec 256))
(declare-const bv_37 (_ BitVec 256))
(declare-const bv_38 (_ BitVec 256))
(declare-const bv_39 (_ BitVec 256))
(declare-const bv_40 (_ BitVec 256))
(declare-const bv_41 Bool)
(declare-const bv_42 Bool)
(declare-const bv_43 (_ BitVec 256))
(assert (= bv_2 (bvlshr bv_1 bv_0)))
(assert (= bv_3 (bvsub bv_0 bv_1)))
(assert (= bv_4 (bvxor bv_0 bv_1)))
(assert (= bv_5 (bvnot bv_3)))
(assert (= bv_6 (bvurem bv_4 bv_5)))
(assert (= bv_7 (bvneg bv_0)))
(assert (= bv_8 (bvsub bv_7 bv_5)))
(assert (= bv_9 (bvand bv_1 bv_0)))
(assert (= bv_10 (bvand bv_7 bv_5)))
(assert (= bv_11 (bvor bv_2 bv_6)))
(assert (= bv_12 (bvor bv_1 bv_10)))
(assert (= bv_13 (bvadd bv_2 bv_10)))
(assert (= bv_14 (bvxor bv_5 bv_13)))
(assert (= bv_15 (bvneg bv_1)))
(assert (= bv_16 (bvneg bv_7)))
(assert (= bv_17 (bvshl bv_3 bv_0)))
(assert (= bv_18 (bvshl bv_0 bv_14)))
(assert (= bv_19 (bvand bv_14 bv_3)))
(assert (= bv_20 (bvlshr bv_4 bv_15)))
(assert (= bv_21 (bvneg bv_3)))
(assert (= bv_22 (bvor bv_12 bv_10)))
(assert (= bv_23 (bvlshr bv_18 bv_7)))
(assert (= bv_24 (bvxor bv_1 bv_12)))
(assert (= bv_25 (bvshl bv_6 bv_4)))
(assert (= bv_26 (bvnot bv_4)))
(assert (= bv_27 (bvxor bv_7 bv_21)))
(assert (= bv_28 (bvudiv bv_9 bv_0)))
(assert (= bv_29 (bvor bv_5 bv_11)))
(assert (= bv_30 (bvor bv_29 bv_10)))
(assert (= bv_31 (bvsge bv_7 bv_29)))
(assert (= bv_32 (bvslt bv_21 bv_25)))
(assert (= bv_33 (bvshl bv_7 bv_15)))
(assert (= bv_34 (bvadd bv_6 bv_19)))
(assert (= bv_35 (bvor bv_17 bv_33)))
(assert (= bv_36 (bvadd bv_10 bv_17)))
(assert (= bv_37 (bvmul bv_25 bv_20)))
(assert (= bv_38 (bvlshr bv_22 bv_29)))
(assert (= bv_39 (bvneg bv_5)))
(assert (= bv_40 (bvudiv bv_34 bv_5)))
(assert (= bv_41 (bvsge bv_1 bv_35)))
(assert (= bv_42 (bvugt bv_40 bv_8)))
(assert (= bv_43 (bvsub bv_22 bv_5)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(declare-const z_8 Bool)
(declare-const z_9 Bool)
(assert (= z_0 (= bv_2 bv_16)))
(assert (= z_1 (= bv_5 bv_40)))
(assert (= z_2 (= bv_27 bv_21)))
(assert (= z_3 (= bv_12 bv_33)))
(assert (= z_4 (= bv_29 bv_7)))
(assert (= z_5 (= bv_9 bv_8)))
(assert (= z_6 (= bv_20 bv_15)))
(assert (= z_7 (= bv_31 bv_32)))
(assert (= z_8 (= bv_19 bv_36)))
(assert (= z_9 (= bv_24 bv_30)))
(assert ( and ( and ( and ( not z_0 ) ( or z_6 z_3 ) ) ( or ( or z_1 z_9 ) z_5 ) ) ( and z_4 ( and ( or z_8 z_2 ) z_7 ) ) ) )
(check-sat)
(get-model)
(exit)
