(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 (_ BitVec 256))
(declare-const bv_4 Bool)
(declare-const bv_5 (_ BitVec 256))
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 (_ BitVec 256))
(declare-const bv_9 Bool)
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 (_ BitVec 256))
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 (_ BitVec 256))
(declare-const bv_17 (_ BitVec 256))
(declare-const bv_18 (_ BitVec 256))
(declare-const bv_19 (_ BitVec 256))
(declare-const bv_20 (_ BitVec 256))
(declare-const bv_21 (_ BitVec 256))
(declare-const bv_22 (_ BitVec 256))
(declare-const bv_23 (_ BitVec 256))
(declare-const bv_24 (_ BitVec 256))
(declare-const bv_25 (_ BitVec 256))
(declare-const bv_26 (_ BitVec 256))
(declare-const bv_27 (_ BitVec 256))
(declare-const bv_28 (_ BitVec 256))
(declare-const bv_29 (_ BitVec 256))
(declare-const bv_30 (_ BitVec 256))
(declare-const bv_31 (_ BitVec 256))
(declare-const bv_32 (_ BitVec 256))
(declare-const bv_33 (_ BitVec 256))
(declare-const bv_34 (_ BitVec 256))
(declare-const bv_35 (_ BitVec 256))
(declare-const bv_36 (_ BitVec 256))
(assert (= bv_2 (bvlshr bv_1 bv_0)))
(assert (= bv_3 (bvadd bv_0 bv_2)))
(assert (= bv_4 (bvsgt bv_1 bv_2)))
(assert (= bv_5 (bvlshr bv_0 bv_3)))
(assert (= bv_6 (bvshl bv_1 bv_0)))
(assert (= bv_7 (bvudiv bv_2 bv_1)))
(assert (= bv_8 (bvsub bv_5 bv_6)))
(assert (= bv_9 (bvule bv_8 bv_3)))
(assert (= bv_10 (bvadd bv_3 bv_0)))
(assert (= bv_11 (bvand bv_2 bv_1)))
(assert (= bv_12 (bvadd bv_1 bv_10)))
(assert (= bv_13 (bvadd bv_12 bv_1)))
(assert (= bv_14 (bvneg bv_11)))
(assert (= bv_15 (bvneg bv_14)))
(assert (= bv_16 (bvlshr bv_11 bv_6)))
(assert (= bv_17 (bvnot bv_5)))
(assert (= bv_18 (bvnot bv_5)))
(assert (= bv_19 (bvand bv_12 bv_10)))
(assert (= bv_20 (bvlshr bv_19 bv_5)))
(assert (= bv_21 (bvnot bv_5)))
(assert (= bv_22 (bvneg bv_1)))
(assert (= bv_23 (bvxor bv_14 bv_11)))
(assert (= bv_24 (bvneg bv_17)))
(assert (= bv_25 (bvor bv_2 bv_8)))
(assert (= bv_26 (bvand bv_1 bv_13)))
(assert (= bv_27 (bvnot bv_24)))
(assert (= bv_28 (bvnot bv_26)))
(assert (= bv_29 (bvxor bv_5 bv_10)))
(assert (= bv_30 (bvshl bv_17 bv_1)))
(assert (= bv_31 (bvadd bv_17 bv_1)))
(assert (= bv_32 (bvadd bv_24 bv_31)))
(assert (= bv_33 (bvsub bv_24 bv_18)))
(assert (= bv_34 (bvadd bv_20 bv_2)))
(assert (= bv_35 (bvudiv bv_2 bv_14)))
(assert (= bv_36 (bvsrem bv_26 bv_19)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(declare-const z_8 Bool)
(declare-const z_9 Bool)
(assert (= z_0 (= bv_13 bv_18)))
(assert (= z_1 (= bv_5 bv_27)))
(assert (= z_2 (= bv_30 bv_36)))
(assert (= z_3 (= bv_22 bv_21)))
(assert (= z_4 (= bv_15 bv_11)))
(assert (= z_5 (= bv_14 bv_12)))
(assert (= z_6 (= bv_19 bv_33)))
(assert (= z_7 (= bv_7 bv_10)))
(assert (= z_8 (= bv_20 bv_8)))
(assert (= z_9 (= bv_3 bv_32)))
(assert ( or ( or ( or ( or ( or ( or z_2 z_9 ) ( or z_6 z_7 ) ) z_0 ) ( and z_4 ( or z_3 ( not z_1 ) ) ) ) z_5 ) z_8 ) )
(check-sat)
(get-model)
(exit)
