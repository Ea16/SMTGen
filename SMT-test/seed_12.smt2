(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 Bool)
(declare-const bv_4 Bool)
(declare-const bv_5 (_ BitVec 256))
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 (_ BitVec 256))
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 (_ BitVec 256))
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 (_ BitVec 256))
(declare-const bv_17 (_ BitVec 256))
(declare-const bv_18 (_ BitVec 256))
(assert (= bv_2 (bvor bv_1 bv_0)))
(assert (= bv_3 (bvslt bv_1 bv_0)))
(assert (= bv_4 (bvuge bv_0 bv_2)))
(assert (= bv_5 (bvand bv_1 bv_2)))
(assert (= bv_6 (bvxor bv_0 bv_1)))
(assert (= bv_7 (bvlshr bv_2 bv_6)))
(assert (= bv_8 (bvshl bv_6 bv_2)))
(assert (= bv_9 (bvmul bv_6 bv_1)))
(assert (= bv_10 (bvneg bv_6)))
(assert (= bv_11 (bvneg bv_10)))
(assert (= bv_12 (bvor bv_10 bv_11)))
(assert (= bv_13 (bvadd bv_7 bv_6)))
(assert (= bv_14 (bvnot bv_2)))
(assert (= bv_15 (bvnot bv_14)))
(assert (= bv_16 (bvsub bv_5 bv_7)))
(assert (= bv_17 (bvand bv_9 bv_12)))
(assert (= bv_18 (bvand bv_10 bv_6)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(assert (= z_0 (= bv_14 bv_16)))
(assert (= z_1 (= bv_5 bv_11)))
(assert (= z_2 (= bv_13 bv_6)))
(assert (= z_3 (= bv_15 bv_2)))
(assert (= z_4 (= bv_9 bv_18)))
(assert (= z_5 (= bv_17 bv_7)))
(assert (= z_6 (= bv_8 bv_12)))
(assert (= z_7 (= bv_4 bv_3)))
(assert ( or z_5 ( or z_1 ( or ( or ( or z_6 z_0 ) ( or z_4 z_3 ) ) ( and z_7 z_2 ) ) ) ) )
(check-sat)
(get-model)
(exit)
