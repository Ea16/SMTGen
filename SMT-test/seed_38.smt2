(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 Bool)
(declare-const bv_3 Bool)
(declare-const bv_4 Bool)
(declare-const bv_5 (_ BitVec 256))
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 (_ BitVec 256))
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 Bool)
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 (_ BitVec 256))
(declare-const bv_17 (_ BitVec 256))
(declare-const bv_18 (_ BitVec 256))
(declare-const bv_19 (_ BitVec 256))
(declare-const bv_20 (_ BitVec 256))
(declare-const bv_21 (_ BitVec 256))
(declare-const bv_22 (_ BitVec 256))
(declare-const bv_23 (_ BitVec 256))
(declare-const bv_24 (_ BitVec 256))
(declare-const bv_25 (_ BitVec 256))
(declare-const bv_26 (_ BitVec 256))
(declare-const bv_27 Bool)
(declare-const bv_28 (_ BitVec 256))
(declare-const bv_29 Bool)
(declare-const bv_30 (_ BitVec 256))
(declare-const bv_31 Bool)
(declare-const bv_32 (_ BitVec 256))
(declare-const bv_33 (_ BitVec 256))
(declare-const bv_34 (_ BitVec 256))
(declare-const bv_35 Bool)
(declare-const bv_36 (_ BitVec 256))
(declare-const bv_37 (_ BitVec 256))
(declare-const bv_38 (_ BitVec 256))
(declare-const bv_39 Bool)
(declare-const bv_40 (_ BitVec 256))
(declare-const bv_41 Bool)
(declare-const bv_42 (_ BitVec 256))
(declare-const bv_43 (_ BitVec 256))
(declare-const bv_44 Bool)
(assert (= bv_2 (bvsgt bv_1 bv_0)))
(assert (= bv_3 (bvsgt bv_0 bv_1)))
(assert (= bv_4 (bvult bv_0 bv_1)))
(assert (= bv_5 (bvsub bv_0 bv_1)))
(assert (= bv_6 (bvshl bv_5 bv_1)))
(assert (= bv_7 (bvshl bv_1 bv_0)))
(assert (= bv_8 (bvadd bv_1 bv_7)))
(assert (= bv_9 (bvshl bv_5 bv_6)))
(assert (= bv_10 (bvadd bv_6 bv_5)))
(assert (= bv_11 (bvurem bv_9 bv_8)))
(assert (= bv_12 (bvlshr bv_11 bv_8)))
(assert (= bv_13 (bvand bv_9 bv_0)))
(assert (= bv_14 (bvslt bv_12 bv_5)))
(assert (= bv_15 (bvudiv bv_5 bv_7)))
(assert (= bv_16 (bvsub bv_10 bv_7)))
(assert (= bv_17 (bvsrem bv_10 bv_1)))
(assert (= bv_18 (bvand bv_11 bv_1)))
(assert (= bv_19 (bvmul bv_12 bv_17)))
(assert (= bv_20 (bvxor bv_16 bv_5)))
(assert (= bv_21 (bvsub bv_18 bv_15)))
(assert (= bv_22 (bvadd bv_16 bv_18)))
(assert (= bv_23 (bvand bv_20 bv_7)))
(assert (= bv_24 (bvnot bv_15)))
(assert (= bv_25 (bvshl bv_10 bv_22)))
(assert (= bv_26 (bvnot bv_15)))
(assert (= bv_27 (bvslt bv_26 bv_21)))
(assert (= bv_28 (bvor bv_20 bv_7)))
(assert (= bv_29 (bvule bv_10 bv_20)))
(assert (= bv_30 (bvnot bv_9)))
(assert (= bv_31 (bvsge bv_9 bv_30)))
(assert (= bv_32 (bvand bv_21 bv_17)))
(assert (= bv_33 (bvxor bv_24 bv_26)))
(assert (= bv_34 (bvand bv_30 bv_8)))
(assert (= bv_35 (bvslt bv_34 bv_32)))
(assert (= bv_36 (bvneg bv_15)))
(assert (= bv_37 (bvxor bv_11 bv_8)))
(assert (= bv_38 (bvxor bv_10 bv_36)))
(assert (= bv_39 (bvslt bv_5 bv_15)))
(assert (= bv_40 (bvand bv_0 bv_37)))
(assert (= bv_41 (bvugt bv_19 bv_18)))
(assert (= bv_42 (bvsub bv_19 bv_9)))
(assert (= bv_43 (bvsrem bv_21 bv_18)))
(assert (= bv_44 (bvslt bv_1 bv_13)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(declare-const z_8 Bool)
(declare-const z_9 Bool)
(assert (= z_0 (= bv_13 bv_30)))
(assert (= z_1 (= bv_22 bv_12)))
(assert (= z_2 (= bv_32 bv_33)))
(assert (= z_3 (= bv_24 bv_43)))
(assert (= z_4 (= bv_42 bv_11)))
(assert (= z_5 (= bv_7 bv_34)))
(assert (= z_6 (= bv_5 bv_40)))
(assert (= z_7 (= bv_41 bv_35)))
(assert (= z_8 (= bv_9 bv_17)))
(assert (= z_9 (= bv_4 bv_44)))
(assert ( and ( and z_2 ( or z_3 z_0 ) ) ( or ( or ( and z_7 z_9 ) ( and ( or z_6 z_5 ) ( and z_4 z_1 ) ) ) z_8 ) ) )
(check-sat)
(get-model)
(exit)
