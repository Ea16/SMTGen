(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 Bool)
(declare-const bv_4 (_ BitVec 256))
(declare-const bv_5 (_ BitVec 256))
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 Bool)
(declare-const bv_8 Bool)
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 Bool)
(declare-const bv_14 (_ BitVec 256))
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 (_ BitVec 256))
(declare-const bv_17 (_ BitVec 256))
(declare-const bv_18 (_ BitVec 256))
(declare-const bv_19 Bool)
(assert (= bv_2 (bvadd bv_1 bv_0)))
(assert (= bv_3 (bvsge bv_1 bv_2)))
(assert (= bv_4 (bvsrem bv_2 bv_1)))
(assert (= bv_5 (bvurem bv_1 bv_4)))
(assert (= bv_6 (bvsub bv_1 bv_2)))
(assert (= bv_7 (bvult bv_1 bv_2)))
(assert (= bv_8 (bvult bv_6 bv_0)))
(assert (= bv_9 (bvmul bv_1 bv_2)))
(assert (= bv_10 (bvor bv_2 bv_4)))
(assert (= bv_11 (bvshl bv_0 bv_6)))
(assert (= bv_12 (bvor bv_5 bv_0)))
(assert (= bv_13 (bvsgt bv_2 bv_1)))
(assert (= bv_14 (bvor bv_12 bv_0)))
(assert (= bv_15 (bvneg bv_12)))
(assert (= bv_16 (bvor bv_1 bv_15)))
(assert (= bv_17 (bvlshr bv_1 bv_4)))
(assert (= bv_18 (bvneg bv_12)))
(assert (= bv_19 (bvule bv_11 bv_18)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(assert (= z_0 (= bv_9 bv_2)))
(assert (= z_1 (= bv_11 bv_4)))
(assert (= z_2 (= bv_8 bv_19)))
(assert (= z_3 (= bv_10 bv_16)))
(assert (= z_4 (= bv_6 bv_14)))
(assert (= z_5 (= bv_3 bv_7)))
(assert (= z_6 (= bv_12 bv_5)))
(assert (= z_7 (= bv_17 bv_18)))
(assert ( or ( or z_4 z_2 ) ( or ( and z_1 z_6 ) ( or z_5 ( and ( and z_7 z_3 ) z_0 ) ) ) ) )
(check-sat)
(get-model)
(exit)
