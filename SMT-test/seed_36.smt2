(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 (_ BitVec 256))
(declare-const bv_4 (_ BitVec 256))
(declare-const bv_5 Bool)
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 (_ BitVec 256))
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 (_ BitVec 256))
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 Bool)
(declare-const bv_17 Bool)
(declare-const bv_18 (_ BitVec 256))
(declare-const bv_19 (_ BitVec 256))
(declare-const bv_20 (_ BitVec 256))
(declare-const bv_21 (_ BitVec 256))
(declare-const bv_22 (_ BitVec 256))
(declare-const bv_23 (_ BitVec 256))
(declare-const bv_24 (_ BitVec 256))
(declare-const bv_25 (_ BitVec 256))
(declare-const bv_26 Bool)
(declare-const bv_27 (_ BitVec 256))
(declare-const bv_28 (_ BitVec 256))
(declare-const bv_29 (_ BitVec 256))
(declare-const bv_30 (_ BitVec 256))
(declare-const bv_31 (_ BitVec 256))
(declare-const bv_32 (_ BitVec 256))
(declare-const bv_33 (_ BitVec 256))
(declare-const bv_34 Bool)
(declare-const bv_35 Bool)
(declare-const bv_36 (_ BitVec 256))
(declare-const bv_37 (_ BitVec 256))
(declare-const bv_38 (_ BitVec 256))
(declare-const bv_39 (_ BitVec 256))
(declare-const bv_40 (_ BitVec 256))
(declare-const bv_41 (_ BitVec 256))
(declare-const bv_42 (_ BitVec 256))
(assert (= bv_2 (bvxor bv_1 bv_0)))
(assert (= bv_3 (bvneg bv_0)))
(assert (= bv_4 (bvurem bv_0 bv_3)))
(assert (= bv_5 (bvsge bv_1 bv_3)))
(assert (= bv_6 (bvnot bv_0)))
(assert (= bv_7 (bvadd bv_2 bv_3)))
(assert (= bv_8 (bvshl bv_1 bv_2)))
(assert (= bv_9 (bvshl bv_4 bv_6)))
(assert (= bv_10 (bvshl bv_4 bv_8)))
(assert (= bv_11 (bvneg bv_0)))
(assert (= bv_12 (bvor bv_6 bv_11)))
(assert (= bv_13 (bvshl bv_10 bv_6)))
(assert (= bv_14 (bvor bv_4 bv_0)))
(assert (= bv_15 (bvxor bv_7 bv_6)))
(assert (= bv_16 (bvsle bv_3 bv_15)))
(assert (= bv_17 (bvult bv_7 bv_0)))
(assert (= bv_18 (bvnot bv_4)))
(assert (= bv_19 (bvnot bv_4)))
(assert (= bv_20 (bvneg bv_8)))
(assert (= bv_21 (bvand bv_18 bv_19)))
(assert (= bv_22 (bvand bv_18 bv_19)))
(assert (= bv_23 (bvand bv_10 bv_12)))
(assert (= bv_24 (bvlshr bv_19 bv_13)))
(assert (= bv_25 (bvlshr bv_7 bv_18)))
(assert (= bv_26 (bvsge bv_4 bv_8)))
(assert (= bv_27 (bvshl bv_6 bv_4)))
(assert (= bv_28 (bvneg bv_2)))
(assert (= bv_29 (bvneg bv_21)))
(assert (= bv_30 (bvadd bv_11 bv_2)))
(assert (= bv_31 (bvxor bv_27 bv_24)))
(assert (= bv_32 (bvneg bv_13)))
(assert (= bv_33 (bvor bv_4 bv_31)))
(assert (= bv_34 (bvult bv_22 bv_32)))
(assert (= bv_35 (bvugt bv_19 bv_3)))
(assert (= bv_36 (bvand bv_13 bv_10)))
(assert (= bv_37 (bvor bv_4 bv_7)))
(assert (= bv_38 (bvneg bv_21)))
(assert (= bv_39 (bvshl bv_20 bv_2)))
(assert (= bv_40 (bvadd bv_2 bv_12)))
(assert (= bv_41 (bvneg bv_25)))
(assert (= bv_42 (bvlshr bv_14 bv_12)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(declare-const z_8 Bool)
(declare-const z_9 Bool)
(assert (= z_0 (= bv_4 bv_37)))
(assert (= z_1 (= bv_6 bv_2)))
(assert (= z_2 (= bv_39 bv_25)))
(assert (= z_3 (= bv_38 bv_28)))
(assert (= z_4 (= bv_31 bv_15)))
(assert (= z_5 (= bv_23 bv_42)))
(assert (= z_6 (= bv_20 bv_32)))
(assert (= z_7 (= bv_8 bv_36)))
(assert (= z_8 (= bv_41 bv_27)))
(assert (= z_9 (= bv_30 bv_40)))
(assert ( and ( and ( and ( and ( and z_9 z_3 ) z_2 ) ( and z_5 z_7 ) ) z_6 ) ( or ( or ( or z_4 z_0 ) z_8 ) z_1 ) ) )
(check-sat)
(get-model)
(exit)
