(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 (_ BitVec 256))
(declare-const bv_4 (_ BitVec 256))
(declare-const bv_5 (_ BitVec 256))
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 (_ BitVec 256))
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(assert (= bv_2 (bvadd bv_1 bv_0)))
(assert (= bv_3 (bvadd bv_2 bv_0)))
(assert (= bv_4 (bvlshr bv_0 bv_2)))
(assert (= bv_5 (bvudiv bv_4 bv_2)))
(assert (= bv_6 (bvor bv_1 bv_5)))
(assert (= bv_7 (bvneg bv_3)))
(assert (= bv_8 (bvor bv_0 bv_3)))
(assert (= bv_9 (bvneg bv_2)))
(assert (= bv_10 (bvneg bv_8)))
(assert (= bv_11 (bvneg bv_5)))
(assert (= bv_12 (bvor bv_9 bv_2)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(assert (= z_0 (= bv_10 bv_3)))
(assert (= z_1 (= bv_11 bv_6)))
(assert (= z_2 (= bv_2 bv_4)))
(assert (= z_3 (= bv_12 bv_5)))
(assert (= z_4 (= bv_8 bv_7)))
(assert ( or ( or ( or z_3 z_1 ) z_4 ) ( or z_0 z_2 ) ) )
(check-sat)
(get-model)
(exit)
