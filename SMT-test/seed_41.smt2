(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 (_ BitVec 256))
(declare-const bv_4 Bool)
(declare-const bv_5 (_ BitVec 256))
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 Bool)
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 Bool)
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 Bool)
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 (_ BitVec 256))
(declare-const bv_17 (_ BitVec 256))
(declare-const bv_18 (_ BitVec 256))
(declare-const bv_19 (_ BitVec 256))
(declare-const bv_20 (_ BitVec 256))
(declare-const bv_21 (_ BitVec 256))
(declare-const bv_22 (_ BitVec 256))
(declare-const bv_23 (_ BitVec 256))
(declare-const bv_24 (_ BitVec 256))
(declare-const bv_25 (_ BitVec 256))
(declare-const bv_26 (_ BitVec 256))
(declare-const bv_27 (_ BitVec 256))
(declare-const bv_28 Bool)
(declare-const bv_29 (_ BitVec 256))
(declare-const bv_30 (_ BitVec 256))
(declare-const bv_31 Bool)
(declare-const bv_32 (_ BitVec 256))
(declare-const bv_33 (_ BitVec 256))
(declare-const bv_34 (_ BitVec 256))
(declare-const bv_35 (_ BitVec 256))
(declare-const bv_36 Bool)
(declare-const bv_37 (_ BitVec 256))
(declare-const bv_38 (_ BitVec 256))
(declare-const bv_39 (_ BitVec 256))
(declare-const bv_40 (_ BitVec 256))
(declare-const bv_41 (_ BitVec 256))
(declare-const bv_42 (_ BitVec 256))
(declare-const bv_43 (_ BitVec 256))
(declare-const bv_44 (_ BitVec 256))
(declare-const bv_45 (_ BitVec 256))
(declare-const bv_46 (_ BitVec 256))
(assert (= bv_1 (bvneg bv_0)))
(assert (= bv_2 (bvand bv_1 bv_0)))
(assert (= bv_3 (bvlshr bv_0 bv_2)))
(assert (= bv_4 (bvsgt bv_2 bv_3)))
(assert (= bv_5 (bvxor bv_3 bv_0)))
(assert (= bv_6 (bvor bv_2 bv_1)))
(assert (= bv_7 (bvor bv_6 bv_0)))
(assert (= bv_8 (bvule bv_6 bv_7)))
(assert (= bv_9 (bvsub bv_2 bv_6)))
(assert (= bv_10 (bvsge bv_5 bv_1)))
(assert (= bv_11 (bvsub bv_5 bv_3)))
(assert (= bv_12 (bvudiv bv_2 bv_6)))
(assert (= bv_13 (bvlshr bv_9 bv_6)))
(assert (= bv_14 (bvugt bv_12 bv_0)))
(assert (= bv_15 (bvand bv_2 bv_9)))
(assert (= bv_16 (bvlshr bv_9 bv_5)))
(assert (= bv_17 (bvnot bv_16)))
(assert (= bv_18 (bvsub bv_7 bv_12)))
(assert (= bv_19 (bvadd bv_18 bv_11)))
(assert (= bv_20 (bvshl bv_0 bv_13)))
(assert (= bv_21 (bvshl bv_6 bv_13)))
(assert (= bv_22 (bvneg bv_17)))
(assert (= bv_23 (bvsub bv_0 bv_12)))
(assert (= bv_24 (bvneg bv_5)))
(assert (= bv_25 (bvxor bv_21 bv_23)))
(assert (= bv_26 (bvand bv_23 bv_6)))
(assert (= bv_27 (bvand bv_18 bv_11)))
(assert (= bv_28 (bvsle bv_22 bv_24)))
(assert (= bv_29 (bvor bv_9 bv_27)))
(assert (= bv_30 (bvxor bv_16 bv_20)))
(assert (= bv_31 (bvult bv_22 bv_29)))
(assert (= bv_32 (bvsrem bv_17 bv_29)))
(assert (= bv_33 (bvand bv_22 bv_25)))
(assert (= bv_34 (bvudiv bv_12 bv_15)))
(assert (= bv_35 (bvudiv bv_2 bv_18)))
(assert (= bv_36 (bvugt bv_24 bv_7)))
(assert (= bv_37 (bvnot bv_24)))
(assert (= bv_38 (bvnot bv_27)))
(assert (= bv_39 (bvshl bv_2 bv_26)))
(assert (= bv_40 (bvnot bv_0)))
(assert (= bv_41 (bvand bv_37 bv_39)))
(assert (= bv_42 (bvsrem bv_7 bv_21)))
(assert (= bv_43 (bvsub bv_41 bv_19)))
(assert (= bv_44 (bvxor bv_5 bv_17)))
(assert (= bv_45 (bvsub bv_15 bv_11)))
(assert (= bv_46 (bvneg bv_19)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(declare-const z_8 Bool)
(declare-const z_9 Bool)
(assert (= z_0 (= bv_18 bv_12)))
(assert (= z_1 (= bv_24 bv_37)))
(assert (= z_2 (= bv_20 bv_46)))
(assert (= z_3 (= bv_40 bv_39)))
(assert (= z_4 (= bv_2 bv_30)))
(assert (= z_5 (= bv_29 bv_25)))
(assert (= z_6 (= bv_44 bv_32)))
(assert (= z_7 (= bv_42 bv_38)))
(assert (= z_8 (= bv_17 bv_23)))
(assert (= z_9 (= bv_16 bv_21)))
(assert ( or z_8 ( and ( or ( or ( or z_7 z_2 ) z_3 ) z_4 ) ( or ( and ( or z_6 ( or z_1 z_9 ) ) z_0 ) z_5 ) ) ) )
(check-sat)
(get-model)
(exit)
