(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 (_ BitVec 256))
(declare-const bv_4 (_ BitVec 256))
(declare-const bv_5 Bool)
(declare-const bv_6 Bool)
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 (_ BitVec 256))
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 (_ BitVec 256))
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 (_ BitVec 256))
(declare-const bv_17 (_ BitVec 256))
(declare-const bv_18 (_ BitVec 256))
(declare-const bv_19 (_ BitVec 256))
(declare-const bv_20 (_ BitVec 256))
(declare-const bv_21 (_ BitVec 256))
(declare-const bv_22 (_ BitVec 256))
(declare-const bv_23 (_ BitVec 256))
(declare-const bv_24 Bool)
(declare-const bv_25 (_ BitVec 256))
(declare-const bv_26 (_ BitVec 256))
(declare-const bv_27 (_ BitVec 256))
(declare-const bv_28 (_ BitVec 256))
(declare-const bv_29 (_ BitVec 256))
(declare-const bv_30 (_ BitVec 256))
(declare-const bv_31 (_ BitVec 256))
(declare-const bv_32 (_ BitVec 256))
(declare-const bv_33 (_ BitVec 256))
(declare-const bv_34 (_ BitVec 256))
(declare-const bv_35 (_ BitVec 256))
(declare-const bv_36 (_ BitVec 256))
(declare-const bv_37 (_ BitVec 256))
(declare-const bv_38 (_ BitVec 256))
(declare-const bv_39 Bool)
(declare-const bv_40 (_ BitVec 256))
(declare-const bv_41 (_ BitVec 256))
(assert (= bv_2 (bvand bv_1 bv_0)))
(assert (= bv_3 (bvshl bv_0 bv_2)))
(assert (= bv_4 (bvxor bv_3 bv_2)))
(assert (= bv_5 (bvuge bv_2 bv_4)))
(assert (= bv_6 (bvule bv_2 bv_4)))
(assert (= bv_7 (bvnot bv_4)))
(assert (= bv_8 (bvand bv_4 bv_0)))
(assert (= bv_9 (bvlshr bv_3 bv_4)))
(assert (= bv_10 (bvadd bv_2 bv_1)))
(assert (= bv_11 (bvnot bv_8)))
(assert (= bv_12 (bvsrem bv_9 bv_10)))
(assert (= bv_13 (bvlshr bv_10 bv_11)))
(assert (= bv_14 (bvadd bv_3 bv_0)))
(assert (= bv_15 (bvadd bv_9 bv_4)))
(assert (= bv_16 (bvor bv_12 bv_13)))
(assert (= bv_17 (bvand bv_0 bv_7)))
(assert (= bv_18 (bvsub bv_3 bv_15)))
(assert (= bv_19 (bvshl bv_11 bv_8)))
(assert (= bv_20 (bvudiv bv_17 bv_10)))
(assert (= bv_21 (bvneg bv_12)))
(assert (= bv_22 (bvneg bv_15)))
(assert (= bv_23 (bvadd bv_9 bv_15)))
(assert (= bv_24 (bvslt bv_7 bv_3)))
(assert (= bv_25 (bvudiv bv_3 bv_12)))
(assert (= bv_26 (bvadd bv_2 bv_7)))
(assert (= bv_27 (bvnot bv_14)))
(assert (= bv_28 (bvlshr bv_11 bv_25)))
(assert (= bv_29 (bvxor bv_19 bv_13)))
(assert (= bv_30 (bvneg bv_1)))
(assert (= bv_31 (bvand bv_1 bv_8)))
(assert (= bv_32 (bvlshr bv_22 bv_4)))
(assert (= bv_33 (bvudiv bv_13 bv_3)))
(assert (= bv_34 (bvshl bv_0 bv_3)))
(assert (= bv_35 (bvadd bv_17 bv_18)))
(assert (= bv_36 (bvneg bv_14)))
(assert (= bv_37 (bvneg bv_3)))
(assert (= bv_38 (bvadd bv_30 bv_18)))
(assert (= bv_39 (bvslt bv_33 bv_32)))
(assert (= bv_40 (bvnot bv_29)))
(assert (= bv_41 (bvnot bv_19)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(declare-const z_8 Bool)
(declare-const z_9 Bool)
(assert (= z_0 (= bv_30 bv_37)))
(assert (= z_1 (= bv_35 bv_23)))
(assert (= z_2 (= bv_26 bv_8)))
(assert (= z_3 (= bv_19 bv_9)))
(assert (= z_4 (= bv_18 bv_25)))
(assert (= z_5 (= bv_34 bv_31)))
(assert (= z_6 (= bv_22 bv_7)))
(assert (= z_7 (= bv_32 bv_29)))
(assert (= z_8 (= bv_16 bv_21)))
(assert (= z_9 (= bv_36 bv_15)))
(assert ( or ( and ( and ( and z_7 ( and z_6 z_8 ) ) z_9 ) ( or z_4 z_2 ) ) ( and z_0 ( and ( or z_1 z_5 ) z_3 ) ) ) )
(check-sat)
(get-model)
(exit)
