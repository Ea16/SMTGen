(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 (_ BitVec 256))
(declare-const bv_4 (_ BitVec 256))
(declare-const bv_5 (_ BitVec 256))
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 (_ BitVec 256))
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 (_ BitVec 256))
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 (_ BitVec 256))
(declare-const bv_17 (_ BitVec 256))
(declare-const bv_18 (_ BitVec 256))
(declare-const bv_19 (_ BitVec 256))
(declare-const bv_20 Bool)
(declare-const bv_21 (_ BitVec 256))
(declare-const bv_22 (_ BitVec 256))
(declare-const bv_23 (_ BitVec 256))
(declare-const bv_24 (_ BitVec 256))
(declare-const bv_25 (_ BitVec 256))
(declare-const bv_26 (_ BitVec 256))
(declare-const bv_27 (_ BitVec 256))
(declare-const bv_28 (_ BitVec 256))
(declare-const bv_29 (_ BitVec 256))
(declare-const bv_30 (_ BitVec 256))
(declare-const bv_31 (_ BitVec 256))
(declare-const bv_32 (_ BitVec 256))
(declare-const bv_33 (_ BitVec 256))
(declare-const bv_34 (_ BitVec 256))
(declare-const bv_35 (_ BitVec 256))
(declare-const bv_36 (_ BitVec 256))
(declare-const bv_37 (_ BitVec 256))
(declare-const bv_38 Bool)
(declare-const bv_39 (_ BitVec 256))
(declare-const bv_40 (_ BitVec 256))
(declare-const bv_41 (_ BitVec 256))
(declare-const bv_42 (_ BitVec 256))
(declare-const bv_43 Bool)
(declare-const bv_44 (_ BitVec 256))
(declare-const bv_45 (_ BitVec 256))
(assert (= bv_2 (bvsub bv_1 bv_0)))
(assert (= bv_3 (bvnot bv_1)))
(assert (= bv_4 (bvshl bv_2 bv_0)))
(assert (= bv_5 (bvneg bv_2)))
(assert (= bv_6 (bvsub bv_1 bv_0)))
(assert (= bv_7 (bvxor bv_1 bv_0)))
(assert (= bv_8 (bvand bv_5 bv_6)))
(assert (= bv_9 (bvshl bv_2 bv_5)))
(assert (= bv_10 (bvsub bv_8 bv_3)))
(assert (= bv_11 (bvadd bv_0 bv_6)))
(assert (= bv_12 (bvshl bv_8 bv_5)))
(assert (= bv_13 (bvmul bv_2 bv_9)))
(assert (= bv_14 (bvneg bv_8)))
(assert (= bv_15 (bvadd bv_5 bv_11)))
(assert (= bv_16 (bvsrem bv_4 bv_12)))
(assert (= bv_17 (bvneg bv_3)))
(assert (= bv_18 (bvor bv_8 bv_2)))
(assert (= bv_19 (bvneg bv_14)))
(assert (= bv_20 (bvslt bv_5 bv_13)))
(assert (= bv_21 (bvand bv_19 bv_14)))
(assert (= bv_22 (bvneg bv_6)))
(assert (= bv_23 (bvshl bv_14 bv_4)))
(assert (= bv_24 (bvand bv_3 bv_14)))
(assert (= bv_25 (bvshl bv_9 bv_8)))
(assert (= bv_26 (bvurem bv_25 bv_22)))
(assert (= bv_27 (bvnot bv_11)))
(assert (= bv_28 (bvand bv_17 bv_0)))
(assert (= bv_29 (bvnot bv_1)))
(assert (= bv_30 (bvnot bv_28)))
(assert (= bv_31 (bvlshr bv_21 bv_27)))
(assert (= bv_32 (bvneg bv_24)))
(assert (= bv_33 (bvor bv_32 bv_28)))
(assert (= bv_34 (bvadd bv_25 bv_11)))
(assert (= bv_35 (bvneg bv_23)))
(assert (= bv_36 (bvor bv_28 bv_7)))
(assert (= bv_37 (bvnot bv_7)))
(assert (= bv_38 (bvsle bv_14 bv_35)))
(assert (= bv_39 (bvadd bv_14 bv_33)))
(assert (= bv_40 (bvnot bv_11)))
(assert (= bv_41 (bvsub bv_0 bv_23)))
(assert (= bv_42 (bvadd bv_25 bv_18)))
(assert (= bv_43 (bvult bv_1 bv_34)))
(assert (= bv_44 (bvor bv_19 bv_22)))
(assert (= bv_45 (bvadd bv_19 bv_37)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(declare-const z_8 Bool)
(declare-const z_9 Bool)
(assert (= z_0 (= bv_21 bv_15)))
(assert (= z_1 (= bv_40 bv_34)))
(assert (= z_2 (= bv_11 bv_32)))
(assert (= z_3 (= bv_45 bv_10)))
(assert (= z_4 (= bv_29 bv_8)))
(assert (= z_5 (= bv_25 bv_42)))
(assert (= z_6 (= bv_37 bv_28)))
(assert (= z_7 (= bv_31 bv_27)))
(assert (= z_8 (= bv_16 bv_24)))
(assert (= z_9 (= bv_22 bv_2)))
(assert ( and ( or ( or z_8 ( and z_7 z_2 ) ) ( and z_5 ( and z_1 ( or z_4 z_0 ) ) ) ) ( or ( or z_9 z_6 ) z_3 ) ) )
(check-sat)
(get-model)
(exit)
