(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 (_ BitVec 256))
(declare-const bv_4 (_ BitVec 256))
(declare-const bv_5 (_ BitVec 256))
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 (_ BitVec 256))
(declare-const bv_9 Bool)
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 (_ BitVec 256))
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 (_ BitVec 256))
(declare-const bv_17 (_ BitVec 256))
(declare-const bv_18 (_ BitVec 256))
(declare-const bv_19 (_ BitVec 256))
(declare-const bv_20 (_ BitVec 256))
(declare-const bv_21 Bool)
(declare-const bv_22 (_ BitVec 256))
(declare-const bv_23 (_ BitVec 256))
(declare-const bv_24 (_ BitVec 256))
(declare-const bv_25 (_ BitVec 256))
(declare-const bv_26 Bool)
(declare-const bv_27 (_ BitVec 256))
(declare-const bv_28 (_ BitVec 256))
(declare-const bv_29 (_ BitVec 256))
(declare-const bv_30 (_ BitVec 256))
(declare-const bv_31 (_ BitVec 256))
(declare-const bv_32 (_ BitVec 256))
(declare-const bv_33 (_ BitVec 256))
(declare-const bv_34 (_ BitVec 256))
(assert (= bv_2 (bvxor bv_1 bv_0)))
(assert (= bv_3 (bvlshr bv_0 bv_2)))
(assert (= bv_4 (bvlshr bv_1 bv_2)))
(assert (= bv_5 (bvand bv_1 bv_0)))
(assert (= bv_6 (bvor bv_3 bv_5)))
(assert (= bv_7 (bvor bv_3 bv_4)))
(assert (= bv_8 (bvadd bv_2 bv_1)))
(assert (= bv_9 (bvugt bv_1 bv_7)))
(assert (= bv_10 (bvnot bv_5)))
(assert (= bv_11 (bvlshr bv_5 bv_6)))
(assert (= bv_12 (bvxor bv_4 bv_11)))
(assert (= bv_13 (bvnot bv_11)))
(assert (= bv_14 (bvnot bv_11)))
(assert (= bv_15 (bvxor bv_13 bv_6)))
(assert (= bv_16 (bvneg bv_10)))
(assert (= bv_17 (bvxor bv_1 bv_14)))
(assert (= bv_18 (bvsrem bv_16 bv_13)))
(assert (= bv_19 (bvnot bv_15)))
(assert (= bv_20 (bvor bv_12 bv_8)))
(assert (= bv_21 (bvsgt bv_1 bv_5)))
(assert (= bv_22 (bvnot bv_16)))
(assert (= bv_23 (bvneg bv_20)))
(assert (= bv_24 (bvurem bv_14 bv_16)))
(assert (= bv_25 (bvlshr bv_4 bv_14)))
(assert (= bv_26 (bvult bv_23 bv_1)))
(assert (= bv_27 (bvxor bv_1 bv_12)))
(assert (= bv_28 (bvor bv_22 bv_8)))
(assert (= bv_29 (bvadd bv_5 bv_23)))
(assert (= bv_30 (bvneg bv_27)))
(assert (= bv_31 (bvneg bv_3)))
(assert (= bv_32 (bvshl bv_17 bv_7)))
(assert (= bv_33 (bvor bv_23 bv_12)))
(assert (= bv_34 (bvsrem bv_23 bv_31)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(declare-const z_8 Bool)
(declare-const z_9 Bool)
(assert (= z_0 (= bv_31 bv_32)))
(assert (= z_1 (= bv_24 bv_2)))
(assert (= z_2 (= bv_25 bv_15)))
(assert (= z_3 (= bv_19 bv_5)))
(assert (= z_4 (= bv_33 bv_28)))
(assert (= z_5 (= bv_10 bv_8)))
(assert (= z_6 (= bv_14 bv_11)))
(assert (= z_7 (= bv_6 bv_18)))
(assert (= z_8 (= bv_29 bv_13)))
(assert (= z_9 (= bv_23 bv_12)))
(assert ( or ( or z_2 ( or ( not z_7 ) z_9 ) ) ( or ( and ( or z_4 z_5 ) z_8 ) ( and ( and z_6 z_3 ) ( and z_1 z_0 ) ) ) ) )
(check-sat)
(get-model)
(exit)
