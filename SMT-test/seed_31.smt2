(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 (_ BitVec 256))
(declare-const bv_4 (_ BitVec 256))
(declare-const bv_5 (_ BitVec 256))
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 Bool)
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 (_ BitVec 256))
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 Bool)
(declare-const bv_17 (_ BitVec 256))
(declare-const bv_18 (_ BitVec 256))
(declare-const bv_19 (_ BitVec 256))
(declare-const bv_20 (_ BitVec 256))
(declare-const bv_21 (_ BitVec 256))
(declare-const bv_22 (_ BitVec 256))
(declare-const bv_23 (_ BitVec 256))
(declare-const bv_24 (_ BitVec 256))
(declare-const bv_25 (_ BitVec 256))
(declare-const bv_26 Bool)
(declare-const bv_27 (_ BitVec 256))
(declare-const bv_28 (_ BitVec 256))
(declare-const bv_29 (_ BitVec 256))
(declare-const bv_30 (_ BitVec 256))
(declare-const bv_31 Bool)
(declare-const bv_32 (_ BitVec 256))
(declare-const bv_33 (_ BitVec 256))
(declare-const bv_34 (_ BitVec 256))
(declare-const bv_35 (_ BitVec 256))
(declare-const bv_36 (_ BitVec 256))
(declare-const bv_37 (_ BitVec 256))
(assert (= bv_2 (bvadd bv_1 bv_0)))
(assert (= bv_3 (bvor bv_1 bv_0)))
(assert (= bv_4 (bvsub bv_3 bv_1)))
(assert (= bv_5 (bvand bv_3 bv_0)))
(assert (= bv_6 (bvand bv_1 bv_2)))
(assert (= bv_7 (bvnot bv_6)))
(assert (= bv_8 (bvule bv_2 bv_6)))
(assert (= bv_9 (bvxor bv_2 bv_7)))
(assert (= bv_10 (bvudiv bv_6 bv_4)))
(assert (= bv_11 (bvshl bv_0 bv_3)))
(assert (= bv_12 (bvxor bv_2 bv_11)))
(assert (= bv_13 (bvand bv_12 bv_9)))
(assert (= bv_14 (bvnot bv_1)))
(assert (= bv_15 (bvneg bv_5)))
(assert (= bv_16 (bvult bv_0 bv_7)))
(assert (= bv_17 (bvxor bv_7 bv_4)))
(assert (= bv_18 (bvudiv bv_3 bv_9)))
(assert (= bv_19 (bvlshr bv_10 bv_13)))
(assert (= bv_20 (bvor bv_3 bv_5)))
(assert (= bv_21 (bvsub bv_0 bv_15)))
(assert (= bv_22 (bvnot bv_20)))
(assert (= bv_23 (bvshl bv_7 bv_10)))
(assert (= bv_24 (bvlshr bv_23 bv_21)))
(assert (= bv_25 (bvor bv_3 bv_0)))
(assert (= bv_26 (bvugt bv_19 bv_23)))
(assert (= bv_27 (bvsub bv_19 bv_3)))
(assert (= bv_28 (bvadd bv_21 bv_25)))
(assert (= bv_29 (bvxor bv_24 bv_5)))
(assert (= bv_30 (bvmul bv_19 bv_22)))
(assert (= bv_31 (bvuge bv_6 bv_18)))
(assert (= bv_32 (bvor bv_3 bv_30)))
(assert (= bv_33 (bvneg bv_3)))
(assert (= bv_34 (bvsrem bv_0 bv_27)))
(assert (= bv_35 (bvand bv_12 bv_3)))
(assert (= bv_36 (bvlshr bv_14 bv_35)))
(assert (= bv_37 (bvnot bv_25)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(declare-const z_8 Bool)
(declare-const z_9 Bool)
(assert (= z_0 (= bv_37 bv_18)))
(assert (= z_1 (= bv_29 bv_13)))
(assert (= z_2 (= bv_14 bv_4)))
(assert (= z_3 (= bv_24 bv_6)))
(assert (= z_4 (= bv_30 bv_20)))
(assert (= z_5 (= bv_3 bv_28)))
(assert (= z_6 (= bv_35 bv_32)))
(assert (= z_7 (= bv_21 bv_23)))
(assert (= z_8 (= bv_33 bv_36)))
(assert (= z_9 (= bv_34 bv_2)))
(assert ( or ( or ( or ( or z_2 z_3 ) ( and z_1 z_6 ) ) ( or ( not ( or z_4 ( and z_0 z_9 ) ) ) ( or z_8 z_7 ) ) ) z_5 ) )
(check-sat)
(get-model)
(exit)
