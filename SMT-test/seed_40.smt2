(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 (_ BitVec 256))
(declare-const bv_4 (_ BitVec 256))
(declare-const bv_5 (_ BitVec 256))
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 (_ BitVec 256))
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 Bool)
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 (_ BitVec 256))
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 (_ BitVec 256))
(declare-const bv_17 (_ BitVec 256))
(declare-const bv_18 (_ BitVec 256))
(declare-const bv_19 (_ BitVec 256))
(declare-const bv_20 (_ BitVec 256))
(declare-const bv_21 (_ BitVec 256))
(declare-const bv_22 (_ BitVec 256))
(declare-const bv_23 (_ BitVec 256))
(declare-const bv_24 (_ BitVec 256))
(declare-const bv_25 (_ BitVec 256))
(declare-const bv_26 (_ BitVec 256))
(declare-const bv_27 (_ BitVec 256))
(declare-const bv_28 (_ BitVec 256))
(declare-const bv_29 (_ BitVec 256))
(declare-const bv_30 (_ BitVec 256))
(declare-const bv_31 (_ BitVec 256))
(declare-const bv_32 Bool)
(declare-const bv_33 (_ BitVec 256))
(declare-const bv_34 (_ BitVec 256))
(declare-const bv_35 (_ BitVec 256))
(declare-const bv_36 (_ BitVec 256))
(declare-const bv_37 (_ BitVec 256))
(declare-const bv_38 (_ BitVec 256))
(declare-const bv_39 (_ BitVec 256))
(declare-const bv_40 (_ BitVec 256))
(declare-const bv_41 (_ BitVec 256))
(declare-const bv_42 Bool)
(declare-const bv_43 (_ BitVec 256))
(declare-const bv_44 (_ BitVec 256))
(declare-const bv_45 (_ BitVec 256))
(declare-const bv_46 (_ BitVec 256))
(assert (= bv_2 (bvshl bv_1 bv_0)))
(assert (= bv_3 (bvnot bv_1)))
(assert (= bv_4 (bvxor bv_0 bv_2)))
(assert (= bv_5 (bvlshr bv_1 bv_0)))
(assert (= bv_6 (bvlshr bv_4 bv_0)))
(assert (= bv_7 (bvor bv_2 bv_1)))
(assert (= bv_8 (bvand bv_7 bv_3)))
(assert (= bv_9 (bvsrem bv_5 bv_4)))
(assert (= bv_10 (bvuge bv_3 bv_4)))
(assert (= bv_11 (bvurem bv_1 bv_0)))
(assert (= bv_12 (bvlshr bv_1 bv_0)))
(assert (= bv_13 (bvand bv_2 bv_11)))
(assert (= bv_14 (bvneg bv_0)))
(assert (= bv_15 (bvsub bv_14 bv_8)))
(assert (= bv_16 (bvxor bv_8 bv_13)))
(assert (= bv_17 (bvxor bv_14 bv_12)))
(assert (= bv_18 (bvadd bv_6 bv_11)))
(assert (= bv_19 (bvor bv_7 bv_12)))
(assert (= bv_20 (bvor bv_18 bv_7)))
(assert (= bv_21 (bvxor bv_5 bv_20)))
(assert (= bv_22 (bvshl bv_4 bv_1)))
(assert (= bv_23 (bvsub bv_5 bv_17)))
(assert (= bv_24 (bvadd bv_2 bv_21)))
(assert (= bv_25 (bvadd bv_15 bv_17)))
(assert (= bv_26 (bvand bv_5 bv_15)))
(assert (= bv_27 (bvlshr bv_12 bv_25)))
(assert (= bv_28 (bvudiv bv_4 bv_22)))
(assert (= bv_29 (bvadd bv_7 bv_14)))
(assert (= bv_30 (bvshl bv_22 bv_2)))
(assert (= bv_31 (bvand bv_15 bv_22)))
(assert (= bv_32 (bvsle bv_14 bv_9)))
(assert (= bv_33 (bvxor bv_14 bv_19)))
(assert (= bv_34 (bvnot bv_11)))
(assert (= bv_35 (bvnot bv_25)))
(assert (= bv_36 (bvneg bv_17)))
(assert (= bv_37 (bvsrem bv_21 bv_6)))
(assert (= bv_38 (bvurem bv_36 bv_3)))
(assert (= bv_39 (bvmul bv_12 bv_13)))
(assert (= bv_40 (bvneg bv_23)))
(assert (= bv_41 (bvshl bv_22 bv_0)))
(assert (= bv_42 (bvugt bv_19 bv_8)))
(assert (= bv_43 (bvsub bv_3 bv_6)))
(assert (= bv_44 (bvneg bv_29)))
(assert (= bv_45 (bvneg bv_16)))
(assert (= bv_46 (bvand bv_23 bv_28)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(declare-const z_8 Bool)
(declare-const z_9 Bool)
(assert (= z_0 (= bv_7 bv_6)))
(assert (= z_1 (= bv_46 bv_2)))
(assert (= z_2 (= bv_13 bv_12)))
(assert (= z_3 (= bv_36 bv_14)))
(assert (= z_4 (= bv_43 bv_23)))
(assert (= z_5 (= bv_26 bv_22)))
(assert (= z_6 (= bv_19 bv_24)))
(assert (= z_7 (= bv_3 bv_40)))
(assert (= z_8 (= bv_4 bv_39)))
(assert (= z_9 (= bv_9 bv_11)))
(assert ( and ( and ( or z_7 z_3 ) ( or z_9 z_4 ) ) ( and ( and ( and z_1 z_6 ) ( or z_0 z_8 ) ) ( or z_2 ( not z_5 ) ) ) ) )
(check-sat)
(get-model)
(exit)
