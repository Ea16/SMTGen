(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 (_ BitVec 256))
(declare-const bv_4 (_ BitVec 256))
(declare-const bv_5 Bool)
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 Bool)
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 (_ BitVec 256))
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 (_ BitVec 256))
(declare-const bv_17 (_ BitVec 256))
(declare-const bv_18 (_ BitVec 256))
(declare-const bv_19 (_ BitVec 256))
(declare-const bv_20 (_ BitVec 256))
(declare-const bv_21 Bool)
(declare-const bv_22 (_ BitVec 256))
(declare-const bv_23 (_ BitVec 256))
(declare-const bv_24 (_ BitVec 256))
(declare-const bv_25 Bool)
(declare-const bv_26 (_ BitVec 256))
(declare-const bv_27 (_ BitVec 256))
(declare-const bv_28 (_ BitVec 256))
(declare-const bv_29 (_ BitVec 256))
(assert (= bv_2 (bvsub bv_1 bv_0)))
(assert (= bv_3 (bvlshr bv_2 bv_0)))
(assert (= bv_4 (bvor bv_1 bv_3)))
(assert (= bv_5 (bvugt bv_4 bv_2)))
(assert (= bv_6 (bvadd bv_3 bv_0)))
(assert (= bv_7 (bvadd bv_4 bv_2)))
(assert (= bv_8 (bvule bv_0 bv_4)))
(assert (= bv_9 (bvand bv_6 bv_3)))
(assert (= bv_10 (bvadd bv_0 bv_6)))
(assert (= bv_11 (bvand bv_4 bv_2)))
(assert (= bv_12 (bvudiv bv_7 bv_4)))
(assert (= bv_13 (bvadd bv_3 bv_6)))
(assert (= bv_14 (bvneg bv_0)))
(assert (= bv_15 (bvsrem bv_14 bv_9)))
(assert (= bv_16 (bvxor bv_6 bv_3)))
(assert (= bv_17 (bvneg bv_13)))
(assert (= bv_18 (bvand bv_12 bv_15)))
(assert (= bv_19 (bvneg bv_14)))
(assert (= bv_20 (bvneg bv_11)))
(assert (= bv_21 (bvult bv_9 bv_18)))
(assert (= bv_22 (bvshl bv_20 bv_10)))
(assert (= bv_23 (bvand bv_3 bv_7)))
(assert (= bv_24 (bvlshr bv_12 bv_19)))
(assert (= bv_25 (bvsle bv_15 bv_14)))
(assert (= bv_26 (bvudiv bv_2 bv_24)))
(assert (= bv_27 (bvadd bv_16 bv_14)))
(assert (= bv_28 (bvnot bv_4)))
(assert (= bv_29 (bvsub bv_28 bv_0)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(declare-const z_8 Bool)
(declare-const z_9 Bool)
(assert (= z_0 (= bv_6 bv_27)))
(assert (= z_1 (= bv_24 bv_7)))
(assert (= z_2 (= bv_22 bv_28)))
(assert (= z_3 (= bv_11 bv_16)))
(assert (= z_4 (= bv_18 bv_12)))
(assert (= z_5 (= bv_3 bv_9)))
(assert (= z_6 (= bv_17 bv_13)))
(assert (= z_7 (= bv_23 bv_14)))
(assert (= z_8 (= bv_20 bv_19)))
(assert (= z_9 (= bv_2 bv_10)))
(assert ( and ( and ( or z_9 z_8 ) z_5 ) ( and ( or ( or z_1 z_3 ) ( and z_2 z_0 ) ) ( or ( and z_6 z_7 ) z_4 ) ) ) )
(check-sat)
(get-model)
(exit)
