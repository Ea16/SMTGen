(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 (_ BitVec 256))
(declare-const bv_4 Bool)
(declare-const bv_5 (_ BitVec 256))
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 Bool)
(declare-const bv_8 Bool)
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 (_ BitVec 256))
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 (_ BitVec 256))
(assert (= bv_2 (bvand bv_1 bv_0)))
(assert (= bv_3 (bvshl bv_2 bv_1)))
(assert (= bv_4 (bvult bv_0 bv_2)))
(assert (= bv_5 (bvor bv_3 bv_2)))
(assert (= bv_6 (bvsub bv_1 bv_0)))
(assert (= bv_7 (bvsle bv_0 bv_5)))
(assert (= bv_8 (bvuge bv_0 bv_2)))
(assert (= bv_9 (bvadd bv_1 bv_5)))
(assert (= bv_10 (bvadd bv_5 bv_0)))
(assert (= bv_11 (bvxor bv_10 bv_2)))
(assert (= bv_12 (bvlshr bv_5 bv_9)))
(assert (= bv_13 (bvand bv_0 bv_1)))
(assert (= bv_14 (bvsub bv_10 bv_2)))
(assert (= bv_15 (bvmul bv_9 bv_10)))
(assert (= bv_16 (bvurem bv_5 bv_15)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(assert (= z_0 (= bv_14 bv_2)))
(assert (= z_1 (= bv_10 bv_3)))
(assert (= z_2 (= bv_9 bv_6)))
(assert (= z_3 (= bv_5 bv_12)))
(assert (= z_4 (= bv_16 bv_15)))
(assert (= z_5 (= bv_4 bv_7)))
(assert (= z_6 (= bv_11 bv_13)))
(assert ( or ( and z_3 z_2 ) ( or ( or z_6 ( and z_1 ( or z_4 z_5 ) ) ) z_0 ) ) )
(check-sat)
(get-model)
(exit)
