(set-logic QF_BV)
(set-option :produce-models true)
(declare-const bv_0 (_ BitVec 256))
(declare-const bv_1 (_ BitVec 256))
(declare-const bv_2 (_ BitVec 256))
(declare-const bv_3 (_ BitVec 256))
(declare-const bv_4 (_ BitVec 256))
(declare-const bv_5 (_ BitVec 256))
(declare-const bv_6 (_ BitVec 256))
(declare-const bv_7 (_ BitVec 256))
(declare-const bv_8 (_ BitVec 256))
(declare-const bv_9 (_ BitVec 256))
(declare-const bv_10 (_ BitVec 256))
(declare-const bv_11 (_ BitVec 256))
(declare-const bv_12 (_ BitVec 256))
(declare-const bv_13 (_ BitVec 256))
(declare-const bv_14 (_ BitVec 256))
(declare-const bv_15 (_ BitVec 256))
(declare-const bv_16 (_ BitVec 256))
(declare-const bv_17 (_ BitVec 256))
(declare-const bv_18 (_ BitVec 256))
(declare-const bv_19 (_ BitVec 256))
(declare-const bv_20 (_ BitVec 256))
(declare-const bv_21 Bool)
(declare-const bv_22 (_ BitVec 256))
(declare-const bv_23 (_ BitVec 256))
(declare-const bv_24 (_ BitVec 256))
(declare-const bv_25 (_ BitVec 256))
(declare-const bv_26 (_ BitVec 256))
(declare-const bv_27 (_ BitVec 256))
(declare-const bv_28 (_ BitVec 256))
(declare-const bv_29 Bool)
(declare-const bv_30 (_ BitVec 256))
(declare-const bv_31 Bool)
(declare-const bv_32 (_ BitVec 256))
(declare-const bv_33 (_ BitVec 256))
(declare-const bv_34 (_ BitVec 256))
(declare-const bv_35 (_ BitVec 256))
(declare-const bv_36 (_ BitVec 256))
(declare-const bv_37 (_ BitVec 256))
(declare-const bv_38 (_ BitVec 256))
(declare-const bv_39 (_ BitVec 256))
(assert (= bv_2 (bvurem bv_1 bv_0)))
(assert (= bv_3 (bvshl bv_0 bv_1)))
(assert (= bv_4 (bvneg bv_1)))
(assert (= bv_5 (bvxor bv_0 bv_1)))
(assert (= bv_6 (bvsub bv_4 bv_1)))
(assert (= bv_7 (bvneg bv_3)))
(assert (= bv_8 (bvxor bv_1 bv_5)))
(assert (= bv_9 (bvmul bv_3 bv_4)))
(assert (= bv_10 (bvor bv_8 bv_5)))
(assert (= bv_11 (bvlshr bv_8 bv_10)))
(assert (= bv_12 (bvsrem bv_2 bv_11)))
(assert (= bv_13 (bvudiv bv_5 bv_2)))
(assert (= bv_14 (bvshl bv_0 bv_10)))
(assert (= bv_15 (bvand bv_10 bv_12)))
(assert (= bv_16 (bvsrem bv_11 bv_13)))
(assert (= bv_17 (bvlshr bv_2 bv_7)))
(assert (= bv_18 (bvxor bv_17 bv_1)))
(assert (= bv_19 (bvshl bv_12 bv_8)))
(assert (= bv_20 (bvsrem bv_4 bv_16)))
(assert (= bv_21 (bvsle bv_19 bv_1)))
(assert (= bv_22 (bvand bv_19 bv_9)))
(assert (= bv_23 (bvsub bv_3 bv_11)))
(assert (= bv_24 (bvor bv_9 bv_13)))
(assert (= bv_25 (bvlshr bv_11 bv_14)))
(assert (= bv_26 (bvlshr bv_0 bv_19)))
(assert (= bv_27 (bvadd bv_18 bv_6)))
(assert (= bv_28 (bvxor bv_18 bv_27)))
(assert (= bv_29 (bvugt bv_15 bv_19)))
(assert (= bv_30 (bvurem bv_20 bv_15)))
(assert (= bv_31 (bvule bv_11 bv_22)))
(assert (= bv_32 (bvmul bv_10 bv_17)))
(assert (= bv_33 (bvlshr bv_9 bv_14)))
(assert (= bv_34 (bvlshr bv_8 bv_15)))
(assert (= bv_35 (bvnot bv_11)))
(assert (= bv_36 (bvnot bv_35)))
(assert (= bv_37 (bvshl bv_18 bv_28)))
(assert (= bv_38 (bvmul bv_8 bv_26)))
(assert (= bv_39 (bvurem bv_23 bv_18)))
(declare-const z_0 Bool)
(declare-const z_1 Bool)
(declare-const z_2 Bool)
(declare-const z_3 Bool)
(declare-const z_4 Bool)
(declare-const z_5 Bool)
(declare-const z_6 Bool)
(declare-const z_7 Bool)
(declare-const z_8 Bool)
(declare-const z_9 Bool)
(assert (= z_0 (= bv_38 bv_34)))
(assert (= z_1 (= bv_22 bv_28)))
(assert (= z_2 (= bv_2 bv_18)))
(assert (= z_3 (= bv_14 bv_8)))
(assert (= z_4 (= bv_15 bv_12)))
(assert (= z_5 (= bv_13 bv_35)))
(assert (= z_6 (= bv_24 bv_37)))
(assert (= z_7 (= bv_10 bv_9)))
(assert (= z_8 (= bv_33 bv_6)))
(assert (= z_9 (= bv_3 bv_30)))
(assert ( or ( or ( or z_5 z_9 ) z_3 ) ( and ( and ( or z_4 z_1 ) ( or ( or z_2 z_7 ) z_8 ) ) ( or z_6 z_0 ) ) ) )
(check-sat)
(get-model)
(exit)
